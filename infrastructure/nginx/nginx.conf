events {
    worker_connections 1024;
}

http {
    # ==========================================
    # Upstream - Services chạy trên host
    # ==========================================
    map $http_origin $cors_origin {
        default "";
        "http://localhost:3000" $http_origin;  # frontend
        "http://localhost:3001" $http_origin;  # nếu có frontend khác
        "http://localhost:3002" $http_origin;  # ví dụ service khác
    }

    upstream auth_service {
        server 127.0.0.1:3012;
    }

    upstream product_service {
        server 127.0.0.1:3002;
    }

    upstream order_service {
        server 127.0.0.1:3003;
    }

    # ==========================================
    # Server
    # ==========================================
server {
    listen 8080;

    # === xử lý riêng preflight request (OPTIONS) ===
    if ($request_method = 'OPTIONS') {
        # add_header 'Access-Control-Allow-Origin' $cors_origin always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Cookie' always;
        # add_header 'Access-Control-Max-Age' 3600;
        # add_header 'Content-Length' 0;
        # add_header 'Content-Type' text/plain;
        return 204;
    }

    # === CORS headers cho mọi request khác ===
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Cookie' always;

    # === Health check ===
    location = /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"ok","service":"api-gateway"}';
    }

    # === Auth Service ===
    location /auth/ {
        proxy_pass http://auth_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # === Product Service ===
    location /api/products/ {
        proxy_pass http://product_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # === Order Service ===
    location /api/orders/ {
        proxy_pass http://order_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }

    # === Default 404 ===
    location / {
        add_header Content-Type application/json;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        return 404 '{"error":"Route not found"}';
    }
}


}
